/**
 *
 */
package com.forgedui.model.titanium.ipad;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.eclipse.ui.views.properties.IPropertyDescriptor;
import org.eclipse.ui.views.properties.PropertyDescriptor;
import org.eclipse.ui.views.properties.TextPropertyDescriptor;

import com.forgedui.model.property.BoundsPropertySource;
import com.forgedui.model.property.SizePropertySource;
import com.forgedui.model.titanium.Dialog;
import com.forgedui.model.titanium.Platform;
import com.forgedui.model.titanium.TitaniumUIBaseElement;
import com.forgedui.model.titanium.TitaniumUIContainer;
import com.forgedui.model.titanium.annotations.SupportedPlatform;
import com.forgedui.model.titanium.annotations.Unmapped;

/**
 * @AutoGenerated
 */
@SupportedPlatform(platforms = "ipad")
public class Popover extends TitaniumUIContainer implements Dialog{
	
	@Unmapped
	public static final String PROP_SIZE = "Size";
	
	public Popover() {
		type = "Titanium.UI.iPad.Popover";
	}
	
	@Override
	public IPropertyDescriptor[] getPropertyDescriptors() {
		List<IPropertyDescriptor> fullList = new ArrayList<IPropertyDescriptor>();
		fullList.addAll(Arrays.asList(super.getPropertyDescriptors()));
		fullList.add(new PropertyDescriptor(PROP_SIZE, PROPERTY_SIZE));
		int i = 0;
		for (IPropertyDescriptor iPropertyDescriptor : fullList) {
			if(iPropertyDescriptor.getDisplayName().equals(PROP_BOUNDS))
				break;
			i++;
		}
		fullList.remove(i);
		return fullList.toArray(new IPropertyDescriptor[fullList.size()]);
	}
	
	@Override
	public Object getPropertyValue(Object propertyId) {
		if (PROP_SIZE.equals(propertyId)) {
			return new SizePropertySource(this);
		}
		return super.getPropertyValue(propertyId);
	}

	@Override
	public void setPropertyValue(Object propertyId, Object value) {
		if ("".equals(value)){
			value = null;
		}
		super.setPropertyValue(propertyId, value);
	}
	
	@Override
	public Platform getPlatform() {
		return Platform.iPad;
	}
	
}