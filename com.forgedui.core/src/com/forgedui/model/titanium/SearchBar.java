/**
 *
 */
package com.forgedui.model.titanium;

import com.forgedui.model.titanium.annotations.SupportedPlatform;
import com.forgedui.model.titanium.annotations.Unmapped;

/**
 * @AutoGenerated
 */
public class SearchBar extends TitaniumUIContainer {

	@Unmapped
	public static final String PROP_BAR_COLOR = "barColor";
	@Unmapped
	public static final String PROP_HINT_TEXT = "hintText";
	@Unmapped
	public static final String PROP_HINT_TEXT_ID = "hintTextid";
	@Unmapped
	public static final String PROP_VALUE = "value";
	@Unmapped
	public static final String PROP_SHOW_CANCEL = "showCancel";
	@Unmapped
	public static final String PROP_PROMT = "prompt";
	@Unmapped
	public static final String PROP_PROMT_ID = "promptid";

	/**
	 * 
	 */
	@Unmapped
	private static final long serialVersionUID = 1L;

	private String promptid;

	private Boolean showCancel;

	@SupportedPlatform(platforms={"iphone", "ipad"})
	private String barColor;

	private Boolean autocorrect;

	@SupportedPlatform(platforms={"iphone", "ipad"})
	private KeyboardType keyboardType;

	private String value;

	private String hintText;

	private String prompt;

	private Boolean autocapitalization;

	private String hinttextid;

	public SearchBar() {
		type = "Titanium.UI.SearchBar";
	}

	public String getBarColor() {
		return barColor;
	}

	public void setBarColor(String barColor) {
		String oldBarColor = this.barColor;
		this.barColor = barColor;
		listeners.firePropertyChange(PROP_BAR_COLOR, oldBarColor, barColor);
	}

	@Override
	protected boolean isColorFieldName(String fieldName) {
		boolean res = false;
		if (PROP_BAR_COLOR.equals(fieldName)) {
			res = true;
		}
		if (!res) {
			res = super.isColorFieldName(fieldName);
		}
		return res;
	}

	/**
	 * @return the promptid
	 */
	public String getPromptid() {
		return promptid;
	}

	/**
	 * @param promptid
	 *            the promptid to set
	 */
	public void setPromptid(String promptid) {
		String oldValue = this.promptid;
		this.promptid = promptid;
		listeners.firePropertyChange(PROP_PROMT_ID, oldValue, promptid);
	}

	/**
	 * @return the showCancel
	 */
	public Boolean getShowCancel() {
		return showCancel;
	}

	/**
	 * @param showCancel
	 *            the showCancel to set
	 */
	public void setShowCancel(Boolean showCancel) {
		Boolean oldValue = this.showCancel;
		this.showCancel = showCancel;
		listeners.firePropertyChange(PROP_SHOW_CANCEL, oldValue, showCancel);
	}

	/**
	 * @return the autocorrect
	 */
	public Boolean getAutocorrect() {
		return autocorrect;
	}

	/**
	 * @param autocorrect
	 *            the autocorrect to set
	 */
	public void setAutocorrect(Boolean autocorrect) {
		this.autocorrect = autocorrect;
	}

	/**
	 * @return the keyboardType
	 */
	public KeyboardType getKeyboardType() {
		return keyboardType;
	}

	/**
	 * @param keyboardType
	 *            the keyboardType to set
	 */
	public void setKeyboardType(KeyboardType keyboardType) {
		this.keyboardType = keyboardType;
	}

	/**
	 * @return the value
	 */
	public String getValue() {
		return value;
	}

	/**
	 * @param value
	 *            the value to set
	 */
	public void setValue(String value) {
		String oldValue = this.value;
		this.value = value;
		listeners.firePropertyChange(PROP_VALUE, oldValue, value);
	}

	/**
	 * @return the hintText
	 */
	public String getHintText() {
		return hintText;
	}

	/**
	 * @param hintText
	 *            the hintText to set
	 */
	public void setHintText(String hintText) {
		String oldValue = this.hintText;
		this.hintText = hintText;
		listeners.firePropertyChange(PROP_HINT_TEXT, oldValue, hintText);
	}

	/**
	 * @return the prompt
	 */
	public String getPrompt() {
		return prompt;
	}

	/**
	 * @param prompt
	 *            the prompt to set
	 */
	public void setPrompt(String prompt) {
		String oldPrompt = this.prompt;
		this.prompt = prompt;
		/*
		 * do not scale height!!! if ((prompt == null || prompt.length() == 0)
		 * && (oldPrompt != null && oldPrompt.length() > 0)) { Dimension dim =
		 * getDimension(); dim.height = dim.height / 2; setDimension(dim); }
		 * else if ((oldPrompt == null || oldPrompt.length() == 0) && (prompt !=
		 * null && prompt.length() > 0)) { Dimension dim = getDimension();
		 * dim.height = dim.height * 2; setDimension(dim); }
		 */
		//
		listeners.firePropertyChange(PROP_PROMT, oldPrompt, prompt);
	}

	/**
	 * @return the autocapitalization
	 */
	public Boolean getAutocapitalization() {
		return autocapitalization;
	}

	/**
	 * @param autocapitalization
	 *            the autocapitalization to set
	 */
	public void setAutocapitalization(Boolean autocapitalization) {
		this.autocapitalization = autocapitalization;
	}

	/**
	 * @return the hinttextid
	 */
	public String getHinttextid() {
		return hinttextid;
	}

	/**
	 * @param hinttextid
	 *            the hinttextid to set
	 */
	public void setHinttextid(String hinttextid) {		
		String oldValue = this.hinttextid;
		this.hinttextid = hinttextid;
		listeners.firePropertyChange(PROP_HINT_TEXT_ID, oldValue, hinttextid);
	}
}